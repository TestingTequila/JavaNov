1. Variables:
    Is like a jar/box/container that can store/hold something
    -dataType variableName = value; <= We can use this when we know the exact value that we want to store

    -dataType variableName;  <= We can use this when we don't know the exact value that we want to store
     variableName = value;

     1 byte = 8 bits

     Data Type:
       -Primitive data Type    : [byte(1 byte), short(2 Byte), int(4 Byte), long(8 Byte)], [float(4 Byte), double(8 Byte)], char(2 Byte), boolean(~1 bit)

       -Non-Primitive Data Type: Array, String......
       ======================================================
       Variables : To store
       Statements: To make decisions, we use statements
       1. if else statement : To make single Decision
          if(condition)
          {
             This will execute only if condition is true
          }
          else
          {
             This will execute if condition is false
          }

       2. if else-if statement : To make Multiple Decision
       if(condition)
                 {
                    This will execute only if condition is true
                 }
                 else if(condition2)
                 {
                    This will execute if condition is false
                 }
                else if(condition3)
                 {
                     This will execute if condition is false
                 }
                                  else if(conditionN)
                                  {
                                     This will execute if condition is false
                                  }
                                  else
                                  {
                                    This will execute if none of the condition is true
                                  }
       3. switch statement:To make Multiple Decision, faster than if-else if statement
          switch(DefineOverWhichYouWillSwitch)
          {
              case switch1:
                execute you code;
                break;
                case switch2:
                  execute you code;
                  break;
                case switch3:
                  execute you code;
                  break;

                  default:
                     executed if nothing above is true
                     break;

          }

          //Variable -- To store
          //Statements -- To make decisions
            if-else Statement: We wish to make single decision
            if else-if statement: This will used to make multiple decisions
            switch: To make multiple decisions, This is faster that if-else
          //Loops: To perform repetitive tasks
            -while loop
            -----------
             while(condition)
             {
                  This will execute only if condition is true
                  I/D;
             }
             ----------
            -for loop
                         for(variable; condition;I/D)
                         {
                              This will execute only if condition is true

                         }

            -advanced for loop
-Variables: store some value;
-Statements: to make decision/s;(if-else/if-elseif/switch)
-loops: repeating tasks;(while/for/advancedForLoop)
-Arrays: Can hold multiple values at a time
         dataType[] arrayName = {value1, value2, value3,.......valueN};
         dataType[]  arrayName = new dataType[countOfValuesYouWantToStore];

 Drawback:
    -Where the count of value is fixed
 Overcome:
    -Collections

    ===========================================CLASS============================
    Class ---> Template
    Objects ---> Every copy of the class(Template) is called its object(copyOfTemplate)
    Syntax to create Object(copy) of a class(Template)
    NameOfTheClassWhoseObjectYouWantToCreate nameOfObject = new NameOfTheClassWhoseObjectYouWantToCreate();

    ======================================METHODS============================

    sugar
    milk powder
    tea leaves

    accessModifier[public/private/protected] returnType[void/dataTypes] methodName(can/t parameters)
    {
      Define the action you want to perform over the variables
    }



